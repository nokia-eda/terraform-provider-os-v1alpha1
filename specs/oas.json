{
  "components": {
    "schemas": {
      "ErrorIndex": {
        "properties": {
          "index": {
            "format": "int64",
            "type": "integer"
          }
        },
        "title": "Wrapper for index information inside an error.",
        "type": "object"
      },
      "ErrorItem": {
        "properties": {
          "error": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Generic error response for REST APIs",
        "properties": {
          "code": {
            "description": "the numeric HTTP error code for the response.",
            "format": "int64",
            "type": "integer"
          },
          "details": {
            "description": "The optional details of the error response.",
            "type": "string"
          },
          "dictionary": {
            "additionalProperties": true,
            "description": "Dictionary/map of associated data/information relevant to the error.\nThe error \"message\" may contain {{name}} escapes that should be substituted\nwith information from this dictionary.",
            "type": "object"
          },
          "domain": {
            "description": "The \"domain\" for the error.  If empty, it is an EDA\ncore error.  Alternatively it can be an EDA application\n\"apiVersion\" value (e.g. interfaces.eda.nokia.com/v1alpha1)\nindicating that the error is specific to that application.\nThe domain gives the receiver information that they can use\nto help them interpret the \"internal\" error code value, or\nto find an internationalization translation for the message.",
            "type": "string"
          },
          "errors": {
            "description": "Collection of errors in cases where more than one exists. This needs to be\nflexible so we can support multiple formats",
            "items": {
              "$ref": "#/components/schemas/ErrorItem"
            },
            "type": "array"
          },
          "index": {
            "$ref": "#/components/schemas/ErrorIndex"
          },
          "internal": {
            "description": "Internal error code in cases where we don't have an array of errors",
            "format": "int64",
            "type": "integer"
          },
          "message": {
            "description": "The basic text error message for the error response.",
            "type": "string"
          },
          "ref": {
            "description": "Reference to the error source. Should typically be the URI of the request",
            "type": "string"
          },
          "type": {
            "description": "URI pointing at a document that describes the error and mitigation steps\nIf there is no document, point to the RFC for the HTTP error code",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "WorkflowGetInputsRespElem": {
        "properties": {
          "ackPrompt": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "schemaPrompt": {
            "type": "object"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowId": {
        "properties": {
          "id": {
            "description": "A workflow identifier; these are assigned by the system to a posted workflow.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WorkflowIdentifier": {
        "properties": {
          "group": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "group",
          "kind",
          "name",
          "version"
        ],
        "type": "object"
      },
      "WorkflowInputData": {
        "items": {
          "$ref": "#/components/schemas/WorkflowInputDataElem"
        },
        "type": "array"
      },
      "WorkflowInputDataElem": {
        "properties": {
          "ack": {
            "description": "acknowledge or reject the input request",
            "type": "boolean"
          },
          "input": {
            "description": "provide a json blob to the workflow",
            "type": "object"
          },
          "subflow": {
            "$ref": "#/components/schemas/WorkflowIdentifier"
          }
        },
        "type": "object"
      },
      "com.nokia.eda.os.v1alpha1.DeployImage": {
        "description": "DeployImage is the Schema for the deployimages API",
        "properties": {
          "apiVersion": {
            "default": "os.eda.nokia.com/v1alpha1",
            "pattern": "^os\\.eda\\.nokia\\.com/v1alpha1$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The apiVersion must be set to os.eda.nokia.com/v1alpha1",
              "ui-visible-if": "false"
            }
          },
          "kind": {
            "default": "DeployImage",
            "pattern": "^DeployImage$",
            "type": "string",
            "x-eda-nokia-com": {
              "ui-pattern-error": "The kind must be set to DeployImage",
              "ui-visible-if": "false"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage_metadata"
          },
          "spec": {
            "description": "Upgrade / downgrade images on targets.\nThis workflow can be used directly on a target or list of targets, or with selectors to select targets through labels.\nIt also supports tranches, which are groups of targets that can be upgraded together.\nBy default a set of checks are run before and after the image change, but this can be controlled via the checks field.\nIt also supports canaries, which are upgraded before any other targets.",
            "properties": {
              "canaries": {
                "description": "List of node selectors to use to match canary nodes.\nThis matches labels on TopoNode resources, including those TopoNodes in the list of nodes that will be imaged.\nCanary nodes are upgraded before any other nodes, and are used to test images before broader roll out.\nThis is a list of label expressions, e.g. [\"eda.nokia.com/role=canary\"].",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Canaries",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 380
                }
              },
              "checks": {
                "description": "Configure pre and post checks.",
                "properties": {
                  "checks": {
                    "description": "Checks to run before (pre) and after (post) any image changes.\nIf none are specified, a default set of checks will be run.",
                    "items": {
                      "enum": [
                        "Interface",
                        "DefaultBGP",
                        "PingISL",
                        "PingSystem"
                      ],
                      "type": "string"
                    },
                    "title": "Checks to Run",
                    "type": "array",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 300
                    }
                  },
                  "force": {
                    "description": "Ignore result of pre and post checks, do not prompt on failure.",
                    "title": "Force",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200
                    }
                  },
                  "skip": {
                    "description": "Do not run any checks pre or post image change.",
                    "title": "Skip Checks",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 100
                    }
                  }
                },
                "title": "Checks",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 500
                }
              },
              "drains": {
                "description": "Configure drains to gracefully drain traffic away from nodes before imaging.",
                "properties": {
                  "minimumWaitTimeSeconds": {
                    "default": 60,
                    "description": "Seconds to wait before rebooting a node after it has been drained.\nThis is used to allow time for any traffic to drain away from the node before reboot.",
                    "title": "Minimum Wait Time",
                    "type": "integer",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 200
                    }
                  },
                  "skip": {
                    "description": "Do not run any drain operations. Nodes will be rebooted without attempting to gracefully drain them.",
                    "title": "Skip Drains",
                    "type": "boolean",
                    "x-eda-nokia-com": {
                      "ui-order-priority": 100
                    }
                  }
                },
                "title": "Drains",
                "type": "object",
                "x-eda-nokia-com": {
                  "ui-order-priority": 600
                }
              },
              "nodeProfile": {
                "description": "Destination profile to use for imaging.\nThis profile contains the image to deploy, and other configuration for the node.",
                "title": "Node Profile",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "nodeprofiles",
                      "subject": true,
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-order-priority": 100
                }
              },
              "nodeSelectors": {
                "description": "List of node selectors to select nodes to deploy images on.\nThis matches labels on TopoNode resources, including those TopoNodes in the list of nodes that will be imaged.\nIf no nodes are specified, and no node selectors are specified, all nodes in the given namespace will be selected.\nThis is a list of label expressions, e.g. [\"eda.nokia.com/role=leaf\"].",
                "format": "labelselector",
                "items": {
                  "type": "string"
                },
                "title": "Node Selectors",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 300
                }
              },
              "nodes": {
                "description": "List of nodes to deploy images on.",
                "items": {
                  "type": "string"
                },
                "title": "Nodes",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-auto-completes": [
                    {
                      "condition": "true",
                      "group": "core.eda.nokia.com",
                      "resource": "toponodes",
                      "subject": true,
                      "type": "gvr",
                      "version": "v1"
                    }
                  ],
                  "ui-order-priority": 200
                }
              },
              "prompt": {
                "description": "Control when to prompt the user for input.\nIf any pre or post checks fail, the user will be prompted for input, but this may be used to prompt even if they're successful.",
                "items": {
                  "enum": [
                    "AfterPreChecks",
                    "AfterPostChecks"
                  ],
                  "type": "string"
                },
                "title": "Prompt",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 400
                }
              },
              "tranches": {
                "description": "List of tranches to use for imaging.\nA tranche is a list of node selectors, and a name.\nTranches are upgraded in order, sequentially.",
                "items": {
                  "properties": {
                    "name": {
                      "description": "Name of the tranche.\nThis is used to identify the tranche in the UI and in logs.",
                      "title": "Name",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 100
                      }
                    },
                    "nodeSelectors": {
                      "description": "Node Selectors is a list of node selectors to select nodes to deploy images on in this tranche.\nThis matches labels on TopoNode resources, including those TopoNodes in the list of nodes that will be imaged.\nThis is a list of label expressions, e.g. [\"eda.nokia.com/role=leaf\"].",
                      "format": "labelselector",
                      "items": {
                        "type": "string"
                      },
                      "title": "Node Selectors",
                      "type": "array",
                      "x-eda-nokia-com": {
                        "ui-order-priority": 200
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Tranches",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 350
                }
              }
            },
            "required": [
              "nodeProfile"
            ],
            "title": "Specification",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 30
            }
          },
          "status": {
            "description": "Status of the imaging operation.",
            "properties": {
              "details": {
                "description": "Per-node image deployment details.",
                "items": {
                  "properties": {
                    "drainedTime": {
                      "description": "The time when the node was drained.\nThis is the time when the node was drained before the imaging operation.",
                      "format": "date-time",
                      "title": "Drained Time",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 200,
                        "ui-single-line-group": "Drains"
                      }
                    },
                    "newNodeProfile": {
                      "description": "The new profile of the node.",
                      "title": "New Node Profile",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 130,
                        "ui-single-line-group": "New"
                      }
                    },
                    "newVersion": {
                      "description": "The new version of the node.",
                      "title": "New Version",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 120,
                        "ui-single-line-group": "New"
                      }
                    },
                    "node": {
                      "description": "The name of the node this result is for.",
                      "title": "Node",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 50,
                        "ui-single-line-group": "NodeSuccess"
                      }
                    },
                    "postCheckSuccessful": {
                      "description": "Indicates if post checks were successful for this node.\nThis is true if all post checks passed, false if any post checks failed.",
                      "title": "Post Check Successful",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 150,
                        "ui-single-line-group": "Checks"
                      }
                    },
                    "preCheckSuccessful": {
                      "description": "Indicates if pre checks were successful for this node.\nThis is true if all pre checks passed, false if any pre checks failed.",
                      "title": "Pre Check Successful",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 140,
                        "ui-single-line-group": "Checks"
                      }
                    },
                    "previousNodeProfile": {
                      "description": "The previous profile of the node.\nThis is the node profile that was running before the imaging operation.",
                      "title": "Previous Node Profile",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 110,
                        "ui-single-line-group": "Previous"
                      }
                    },
                    "previousVersion": {
                      "description": "The previous version of the node.\nThis is the version of the image that was running before the imaging operation.",
                      "title": "Previous Version",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 100,
                        "ui-single-line-group": "Previous"
                      }
                    },
                    "rebootRecoveryTime": {
                      "description": "The time when the node was recovered after reboot.\nThis is the time when the node was recovered after the imaging operation.",
                      "format": "date-time",
                      "title": "Reboot Recovery Time",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 350,
                        "ui-single-line-group": "Reboots"
                      }
                    },
                    "rebootTime": {
                      "description": "The time when the node was rebooted.\nThis is the time when the node was rebooted during the imaging operation.",
                      "format": "date-time",
                      "title": "Reboot Time",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 300,
                        "ui-single-line-group": "Reboots"
                      }
                    },
                    "success": {
                      "description": "Indicates if the imaging operation was successful for this node.\nThis is true if the imaging operation was successful, false if it failed.",
                      "title": "Success",
                      "type": "boolean",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 60,
                        "ui-single-line-group": "NodeSuccess"
                      }
                    },
                    "undrainedTime": {
                      "description": "The time when the node was undrained.\nThis is the time when the node was undrained after the imaging operation.",
                      "format": "date-time",
                      "title": "Undrained Time",
                      "type": "string",
                      "x-eda-nokia-com": {
                        "ui-column-span": 2,
                        "ui-order-priority": 250,
                        "ui-single-line-group": "Drains"
                      }
                    }
                  },
                  "type": "object"
                },
                "title": "Details",
                "type": "array",
                "x-eda-nokia-com": {
                  "ui-order-priority": 500
                }
              },
              "firstNodeDrained": {
                "description": "The time when the first node was drained.",
                "format": "date-time",
                "title": "First Node Drained",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 100,
                  "ui-single-line-group": "Drains"
                }
              },
              "firstNodeRebooted": {
                "description": "The time when the first node was rebooted.",
                "format": "date-time",
                "title": "First Node Rebooted",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 300,
                  "ui-single-line-group": "Reboots"
                }
              },
              "lastNodeRebootRecovered": {
                "description": "The time when the last node recovered post reboot.",
                "format": "date-time",
                "title": "Last Node Recovered",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 400,
                  "ui-single-line-group": "Reboots"
                }
              },
              "lastNodeUndrained": {
                "description": "The time when the last node was undrained.",
                "format": "date-time",
                "title": "Last Node Undrained",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 200,
                  "ui-single-line-group": "Drains"
                }
              },
              "result": {
                "description": "Result is the overall result of the image operation.\nIt can be one of the following values:\n- \"Success\": All images were successfully deployed.\n- \"Failed\": No images were successfully deployed.\n- \"PartialSuccess\": Some images were successfully deployed, but not all.",
                "enum": [
                  "Success",
                  "Failed",
                  "PartialSuccess"
                ],
                "title": "Result",
                "type": "string",
                "x-eda-nokia-com": {
                  "ui-column-span": 2,
                  "ui-order-priority": 50
                }
              }
            },
            "readOnly": true,
            "required": [
              "result"
            ],
            "title": "Status",
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 20
            }
          }
        },
        "required": [
          "apiVersion",
          "kind",
          "metadata",
          "spec"
        ],
        "type": "object"
      },
      "com.nokia.eda.os.v1alpha1.DeployImageList": {
        "description": "DeployImageList is a list of deployimages",
        "properties": {
          "apiVersion": {
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage"
            },
            "type": "array"
          },
          "kind": {
            "type": "string"
          }
        },
        "required": [
          "apiVersion",
          "kind"
        ],
        "type": "object"
      },
      "com.nokia.eda.os.v1alpha1.DeployImage_metadata": {
        "properties": {
          "annotations": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-order-priority": 40,
              "ui-title": "Annotations",
              "ui-title-key": "annotations"
            }
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "x-eda-nokia-com": {
              "ui-auto-completes": [
                {
                  "condition": "true",
                  "group": "os.eda.nokia.com",
                  "kind": "DeployImage",
                  "type": "label",
                  "version": "v1alpha1"
                }
              ],
              "ui-order-priority": 30,
              "ui-title": "Labels",
              "ui-title-key": "labels"
            }
          },
          "name": {
            "maxLength": 253,
            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 10,
              "ui-pattern-error": "A valid name is made up of one or more components where each component is separated by period characters.  Each component must start and end with a lower case alphanumeric character and the body of the component is made up of zero or more lower case alphanumeric and hyphen characters.",
              "ui-title": "Name",
              "ui-title-key": "name"
            }
          },
          "namespace": {
            "type": "string",
            "x-eda-nokia-com": {
              "immutable": true,
              "ui-order-priority": 20,
              "ui-title": "Namespace",
              "ui-title-key": "namespace"
            }
          }
        },
        "required": [
          "name",
          "namespace"
        ],
        "type": "object",
        "x-eda-nokia-com": {
          "ui-order-priority": 10,
          "ui-title": "Metadata",
          "ui-title-key": "metadata"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Operating System Application APIs.",
    "version": "v1alpha1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/workflows/v1/os.eda.nokia.com/v1alpha1/deployimages": {
      "get": {
        "operationId": "wfListOsEdaNokiaComV1alpha1Deployimages",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImageList"
                }
              }
            },
            "description": "com.nokia.eda.os.v1alpha1.DeployImageList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all DeployImage instances.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages": {
      "get": {
        "operationId": "wfListOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a comma-separated list of resource fields to fetch/return.  If unspecified, all fields are fetched.  If empty, only key-fields are fetched.",
            "in": "query",
            "name": "fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "an EQL \"where\" expression that will be used to filter the set of resources returned.",
            "in": "query",
            "name": "filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "a label selector string to filter the results based on CR labels",
            "in": "query",
            "name": "label-selector",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImageList"
                }
              }
            },
            "description": "com.nokia.eda.os.v1alpha1.DeployImageList"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "List all DeployImage instances in this namespace.",
        "tags": [
          "workflows"
        ]
      },
      "post": {
        "description": "create a DeployImage",
        "operationId": "wfCreateOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "the namespace scope in which to create the DeployImage",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowId"
                }
              }
            },
            "description": "The response for a successful POST workflows request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages/{name}": {
      "delete": {
        "operationId": "wfDeleteOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no data is returned for this response type."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Delete a DeployImage workflow.",
        "tags": [
          "workflows"
        ]
      },
      "get": {
        "operationId": "wfReadOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "client information for streaming request",
            "in": "query",
            "name": "eventclient",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "stream information for streaming request",
            "in": "query",
            "name": "stream",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/com.nokia.eda.os.v1alpha1.DeployImage"
                }
              }
            },
            "description": "com.nokia.eda.os.v1alpha1.DeployImage"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read the specified DeployImage.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages/{name}/_artifacts": {
      "get": {
        "operationId": "wfListArtifactsOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              }
            },
            "description": "The response for a successful list artifacts request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read list of artifacts generated by a DeployImage workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages/{name}/_artifacts/{artifact}": {
      "get": {
        "operationId": "wfReadArtifactOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "name of the artifact to download",
            "in": "path",
            "name": "artifact",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "format": "binary",
                  "type": "string"
                }
              }
            },
            "description": "The binary content of the requested artifact."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read artifact generated by a DeployImage workflow.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages/{name}/_input": {
      "get": {
        "operationId": "wfListInputOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkflowGetInputsRespElem"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List containing specifications for this flow \u0026 subflow's requested input."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Get inputs requested by the DeployImage.",
        "tags": [
          "workflows"
        ]
      },
      "put": {
        "operationId": "wfSubmitInputOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowInputData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": ""
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Submit input requested by the DeployImage.",
        "tags": [
          "workflows"
        ]
      }
    },
    "/workflows/v1/os.eda.nokia.com/v1alpha1/namespaces/{namespace}/deployimages/{name}/_logs": {
      "get": {
        "operationId": "wfReadLogsOsEdaNokiaComV1alpha1NamespaceDeployimages",
        "parameters": [
          {
            "description": "name of the DeployImage",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the namespace scope in which to operate",
            "in": "path",
            "name": "namespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "The response for a successful GET logs request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Details of an error in response to an API REST request."
          }
        },
        "summary": "Read logs output by the DeployImage.",
        "tags": [
          "workflows"
        ]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}